import sys
master = {}
#
master = {'mage': {}, 'ela': {'pay_mage':405}, 'kishore': {}, 'murali': {'pay_mage':405}}
class expence(object):

    def __init__(self):
        pass

    def add_expence(self,exp_type, shared_list, spent_by):

        for i in shared_list:
            if i.name not in master.keys():
                master.update({i.name:{}})
            else:
                # master[i.name].update({'solo': i.solo})
                pass
        spent_ll = [i.name for i in spent_by]
        sumn = 0
        max_amt = spent_by[0]
        for user in spent_by:
            cost = user.spent/len(shared_list)

            if max_amt.spent < user.spent:
                max_amt = user
            sumn += user.spent
        # print(exp_type + " - total spent by "+ ", ".join([i.name for i in spent_by]) +" = " + str(sumn))
        # print("individual expence : " + str(sumn/len(shared_list)))
        total = sumn
        indi = sumn/len(shared_list)
        # print(max_amt.name)
        update_tt = total
        # print(update_tt, "update_tt")
        # First update kishore

        try:
            try:
                if max_amt.name in master.keys():
                    t = master[max_amt.name]['ind']
                else:
                    t = 0
                    master.update({max_amt.name:{}})
            except KeyError:
                t = 0
            indi1 = indi + t
            tmp = {'ind': indi1}

            master[max_amt.name].update(tmp)
        except KeyError:
            tmp = {max_amt.name: {'ind': indi}}
            master.update(tmp)

        update_tt = update_tt - indi
        for i in spent_by:
            if i.name == max_amt.name:
                continue
            else:

                if (update_tt - i.spent) > 0:
                    update_tt = update_tt - indi
                    # print(indi - i.spent , i.name, ' pay to ',max_amt.name)
                    amt = indi - i.spent

                    try:
                        # print(master)

                        try:
                            tmp_amt = master[i.name]['pay_' + max_amt.name]
                        except KeyError:
                            tmp_amt = 0
                        master[i.name]['pay_' + max_amt.name] = tmp_amt + amt
                    except KeyError:

                        sys.exit()

                    try:
                        try:
                            tmp_indi = master[i.name]['ind']
                        except KeyError:
                            tmp_indi = 0
                        indi1 = tmp_indi + indi
                        master[i.name]['ind'] = indi1
                    except KeyError:

                        sys.exit()
                else:
                    sys.exit()

        for i in shared_list:
            if i.name not in spent_ll:

                try:
                    try:
                        tmp_indi = master[i.name]['ind']
                    except KeyError:
                        tmp_indi = 0
                    indi1 = tmp_indi + indi
                    master[i.name]['ind'] = indi1

                except KeyError:
                    print("error")
                    sys.exit()

                try:
                    try:
                        tmp_amt = master[i.name]['pay_' + max_amt.name]
                    except KeyError:
                        tmp_amt = 0
                    master[i.name]['pay_' + max_amt.name] = tmp_amt + indi
                except KeyError:
                    print("error")
                    sys.exit()

        return total

class user_node(object):

    def __init__(self, name, spent, solo=0):
        self.name = name
        self.spent = spent
        self.solo = solo

teator_snaks = expence()

mage = user_node('mage', 0)
ela = user_node('ela', 200)
kishore = user_node('kishore', 0)
murali = user_node('murali', 40)

indi = teator_snaks.add_expence("Teator Snaks", [mage, ela, kishore, murali], [ela,murali])
# print(master)
master['teator_snaks'] = master

teator_parking = expence()
mage1 = user_node('mage', 0)
ela1 = user_node('ela', 600)
murali1 = user_node('murali', 0)

indi1 = teator_parking.add_expence("Parking", [mage1, ela1, murali1], [ela1])

teator_parking = expence()
mage1 = user_node('mage', 0)
ela1 = user_node('ela', 0)
kishore1 = user_node('kishore', 0)
murali1 = user_node('murali', 80)

indi1 = teator_parking.add_expence("Parking", [mage1, ela1, kishore1, murali1], [murali1])

teator_cdrinks = expence()
mage2 = user_node('mage', 310)
ela2 = user_node('ela', 0)

indi3 = teator_parking.add_expence("Parking", [mage2, ela2], [mage2])

teator_drinks = expence()
mage2 = user_node('mage', 1210-1050, 240)
ela2 = user_node('ela', 0, 405)
murali2 = user_node('murali', 0, 405)

indi2 = teator_parking.add_expence("Parking", [mage2, ela2, murali2], [mage2])


for i in ['mage', 'ela', 'kishore', 'murali']:
    # print(i, master[i])
    for j in master[i].keys():
        if 'pay_' in j:
            # print(j, j.split("_")[-1])
            var = master[j.split("_")[-1]]
            # print(var)
            if 'pay_' + i in var.keys():
                # print(var['pay_' + i], 'pay_' + i)
                s = master[i][j]
                t = var['pay_' + i]
                # print(s, t)
                diff = abs(s - t)
                if s > t:
                    # print('set s', diff)
                    master[i][j] = diff
                    # del(master[j.split("_")[-1]]['pay_' + i])
                    master[j.split("_")[-1]]['pay_' + i] = 0
                else:
                    # print(j,'set t', diff)
                    master[j.split("_")[-1]]['pay_' + i] = diff
                    # del (master[i][j])
                    master[i][j] = 0

for i, j in master.items():
    try:
        del (master[i]['ind'])
    except KeyError:
        pass
    dd = {x:y for x, y in j.items() if y!=0}
    master[i] = dd
    print(i, dd)


